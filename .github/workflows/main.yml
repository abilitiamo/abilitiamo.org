# This is a basic workflow to help you get started with Actions

name: Deploy website

# Controls when the action will run. 
   
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for tagged versions
on:
  push:
    tags:
      - 'do-deploy'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install

      - name: Get short git hash
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
        
      - name: Clean cache
        run: yarn clean
        
      - name: Build website
        run: yarn build
        env:
          CI: false
          REACT_APP_VERSION: ${{ steps.vars.outputs.sha_short }}

      - name: List output files
        run: find public/ -print

      - name: FTP Deploy
        uses: SamKirkland/FTP-Deploy-Action@3.1.1
        with:
          # Deployment destination server & path. Formatted as protocol://domain.com:port/full/destination/path/
          ftp-server: ${{ secrets.FTP_SERVER }}
          # FTP account username
          ftp-username: ${{ secrets.FTP_USERNAME }}
          # FTP account password
          ftp-password: ${{ secrets.FTP_PASSWORD }}
          # The local folder to copy, defaults to root project folder
          local-dir: public
